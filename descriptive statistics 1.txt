import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from scipy import stats

df=pd.read_csv(r"C:\Users\RIBBONS\Downloads\Employee_2.csv")
# print(df)
df

# Step 1: Summary statistics (mean, median, min) for numeric columns (e.g., Age, Salary)
print("\n--- Summary Statistics ---")
numeric_cols = ['Age', 'Salary']  # Replace with actual numeric column names in your CSV
for col in numeric_cols:
    print(f"\nColumn: {col}")
    print(f"Mean: {df[col].mean()}")
    print(f"Median: {df[col].median()}")
    print(f"Minimum: {df[col].min()}")

# Step 2: Group by a categorical variable (e.g., Department or Age Group)
# Let's assume we have a column 'Age_Group' and we want to analyze Salary
if 'Age_Group' not in df.columns:
    # Create Age_Group column if not available
    bins = [18, 30, 40, 50, 60]
    labels = ['18-30', '31-40', '41-50', '51-60']
    df['Age_Group'] = pd.cut(df['Age'], bins=bins, labels=labels, right=False)

# Grouping by Age_Group and summarizing Salary
grouped = df.groupby('Age_Group')['Salary'].agg(['mean', 'median', 'min'])
print("\n--- Salary Statistics Grouped by Age Group ---")
print(grouped)

# Create a list of average salary for each age group
salary_by_group = grouped['mean'].tolist()
print("\nList of Average Salary by Age Group:", salary_by_group)

# Step 3: Grouping on JOB_ID and its count
print("\n--- JOB_ID Count ---")
job_counts = df['PaymentTier'].value_counts()
print(job_counts)

# Step 4: Data visualization for a column (e.g., Salary distribution)
plt.figure(figsize=(8,5))
sns.histplot(df['Salary'], kde=True, color='green', bins=20)
plt.title('Salary Distribution')
plt.xlabel('Salary')
plt.ylabel('Frequency')
plt.grid(True)
plt.show()